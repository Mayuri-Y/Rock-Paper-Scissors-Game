package com.ig;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import java.awt.Window.Type;

public class RockPaperScissorsGame extends JFrame {

    private JButton rockButton;
    private JButton paperButton;
    private JButton scissorsButton;
    private JLabel resultLabel;

    public RockPaperScissorsGame() {
    	getContentPane().setBackground(SystemColor.activeCaption);
    	getContentPane().setFont(new Font("Tahoma", Font.BOLD, 11));
    	getContentPane().setForeground(new Color(255, 0, 255));
    	setType(Type.UTILITY);
    	setBackground(new Color(224, 255, 255));
        setTitle("Rock, Paper, Scissors Game");
        setSize(506, 277);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        rockButton = new JButton("Rock");
        rockButton.setFont(new Font("Tahoma", Font.BOLD, 15));
        rockButton.setBackground(SystemColor.inactiveCaptionBorder);
        paperButton = new JButton("Paper");
        paperButton.setFont(new Font("Tahoma", Font.BOLD, 15));
        scissorsButton = new JButton("Scissors");
        scissorsButton.setFont(new Font("Tahoma", Font.BOLD, 15));
        resultLabel = new JLabel("Result: ");
        resultLabel.setFont(new Font("Tahoma", Font.BOLD, 15));
        getContentPane().setLayout(new BoxLayout(getContentPane(), BoxLayout.X_AXIS));

        getContentPane().add(rockButton);
        getContentPane().add(paperButton);
        getContentPane().add(scissorsButton);
        getContentPane().add(resultLabel);

        rockButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                playGame("Rock");
            }
        });

        paperButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                playGame("Paper");
            }
        });

        scissorsButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                playGame("Scissors");
            }
        });
    }

    private void playGame(String playerChoice) {
        String[] choices = {"Rock", "Paper", "Scissors"};
        Random random = new Random();
        int computerChoiceIndex = random.nextInt(3);
        String computerChoice = choices[computerChoiceIndex];

        if (playerChoice.equals(computerChoice)) {
            resultLabel.setText("Result: It's a tie!");
        } else if ((playerChoice.equals("Rock") && computerChoice.equals("Scissors")) ||
                   (playerChoice.equals("Paper") && computerChoice.equals("Rock")) ||
                   (playerChoice.equals("Scissors") && computerChoice.equals("Paper"))) {
            resultLabel.setText("Result: You win!");
        } else {
            resultLabel.setText("Result: Computer wins!");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                RockPaperScissorsGame game = new RockPaperScissorsGame();
                game.setVisible(true);
            }
        });
    }
}
